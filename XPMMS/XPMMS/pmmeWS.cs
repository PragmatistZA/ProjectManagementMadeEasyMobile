//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="pmmeWSBinding", Namespace="urn:pmmeWS")]
public partial class pmmeWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback getAllUsersOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAllTeamsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAllProjectsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAllTasksOperationCompleted;
    
    private System.Threading.SendOrPostCallback getDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback loginUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback verifyUserLoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback addNewUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback editUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback userAddNewTeamOperationCompleted;
    
    private System.Threading.SendOrPostCallback addUserToTeamOperationCompleted;
    
    private System.Threading.SendOrPostCallback getUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTeamProjectsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getProjectTasksOperationCompleted;
    
    private System.Threading.SendOrPostCallback getListOfTeamsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTeamOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTeamMembersOperationCompleted;
    
    private System.Threading.SendOrPostCallback addTaskOperationCompleted;
    
    private System.Threading.SendOrPostCallback addNewProjectOperationCompleted;
    
    private System.Threading.SendOrPostCallback deleteTaskOperationCompleted;
    
    private System.Threading.SendOrPostCallback joinTeamOperationCompleted;
    
    /// <remarks/>
    public pmmeWS() {
        this.Url = "http://192.168.7.8/pmmeWS.php";
    }
    
    /// <remarks/>
    public event getAllUsersCompletedEventHandler getAllUsersCompleted;
    
    /// <remarks/>
    public event getAllTeamsCompletedEventHandler getAllTeamsCompleted;
    
    /// <remarks/>
    public event getAllProjectsCompletedEventHandler getAllProjectsCompleted;
    
    /// <remarks/>
    public event getAllTasksCompletedEventHandler getAllTasksCompleted;
    
    /// <remarks/>
    public event getDataCompletedEventHandler getDataCompleted;
    
    /// <remarks/>
    public event loginUserCompletedEventHandler loginUserCompleted;
    
    /// <remarks/>
    public event verifyUserLoginCompletedEventHandler verifyUserLoginCompleted;
    
    /// <remarks/>
    public event addNewUserCompletedEventHandler addNewUserCompleted;
    
    /// <remarks/>
    public event editUserCompletedEventHandler editUserCompleted;
    
    /// <remarks/>
    public event userAddNewTeamCompletedEventHandler userAddNewTeamCompleted;
    
    /// <remarks/>
    public event addUserToTeamCompletedEventHandler addUserToTeamCompleted;
    
    /// <remarks/>
    public event getUserCompletedEventHandler getUserCompleted;
    
    /// <remarks/>
    public event getTeamProjectsCompletedEventHandler getTeamProjectsCompleted;
    
    /// <remarks/>
    public event getProjectTasksCompletedEventHandler getProjectTasksCompleted;
    
    /// <remarks/>
    public event getListOfTeamsCompletedEventHandler getListOfTeamsCompleted;
    
    /// <remarks/>
    public event getTeamCompletedEventHandler getTeamCompleted;
    
    /// <remarks/>
    public event getTeamMembersCompletedEventHandler getTeamMembersCompleted;
    
    /// <remarks/>
    public event addTaskCompletedEventHandler addTaskCompleted;
    
    /// <remarks/>
    public event addNewProjectCompletedEventHandler addNewProjectCompleted;
    
    /// <remarks/>
    public event deleteTaskCompletedEventHandler deleteTaskCompleted;
    
    /// <remarks/>
    public event joinTeamCompletedEventHandler joinTeamCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getAllUsers", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getAllUsers() {
        object[] results = this.Invoke("getAllUsers", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAllUsers(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllUsers", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetAllUsers(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getAllUsersAsync() {
        this.getAllUsersAsync(null);
    }
    
    /// <remarks/>
    public void getAllUsersAsync(object userState) {
        if ((this.getAllUsersOperationCompleted == null)) {
            this.getAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllUsersOperationCompleted);
        }
        this.InvokeAsync("getAllUsers", new object[0], this.getAllUsersOperationCompleted, userState);
    }
    
    private void OngetAllUsersOperationCompleted(object arg) {
        if ((this.getAllUsersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAllUsersCompleted(this, new getAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getAllTeams", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getAllTeams() {
        object[] results = this.Invoke("getAllTeams", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAllTeams(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllTeams", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetAllTeams(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getAllTeamsAsync() {
        this.getAllTeamsAsync(null);
    }
    
    /// <remarks/>
    public void getAllTeamsAsync(object userState) {
        if ((this.getAllTeamsOperationCompleted == null)) {
            this.getAllTeamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTeamsOperationCompleted);
        }
        this.InvokeAsync("getAllTeams", new object[0], this.getAllTeamsOperationCompleted, userState);
    }
    
    private void OngetAllTeamsOperationCompleted(object arg) {
        if ((this.getAllTeamsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAllTeamsCompleted(this, new getAllTeamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getAllProjects", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getAllProjects() {
        object[] results = this.Invoke("getAllProjects", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAllProjects(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllProjects", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetAllProjects(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getAllProjectsAsync() {
        this.getAllProjectsAsync(null);
    }
    
    /// <remarks/>
    public void getAllProjectsAsync(object userState) {
        if ((this.getAllProjectsOperationCompleted == null)) {
            this.getAllProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProjectsOperationCompleted);
        }
        this.InvokeAsync("getAllProjects", new object[0], this.getAllProjectsOperationCompleted, userState);
    }
    
    private void OngetAllProjectsOperationCompleted(object arg) {
        if ((this.getAllProjectsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAllProjectsCompleted(this, new getAllProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getAllTasks", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getAllTasks() {
        object[] results = this.Invoke("getAllTasks", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAllTasks(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllTasks", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetAllTasks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getAllTasksAsync() {
        this.getAllTasksAsync(null);
    }
    
    /// <remarks/>
    public void getAllTasksAsync(object userState) {
        if ((this.getAllTasksOperationCompleted == null)) {
            this.getAllTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTasksOperationCompleted);
        }
        this.InvokeAsync("getAllTasks", new object[0], this.getAllTasksOperationCompleted, userState);
    }
    
    private void OngetAllTasksOperationCompleted(object arg) {
        if ((this.getAllTasksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAllTasksCompleted(this, new getAllTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getData", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getData(string category) {
        object[] results = this.Invoke("getData", new object[] {
                    category});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetData(string category, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getData", new object[] {
                    category}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getDataAsync(string category) {
        this.getDataAsync(category, null);
    }
    
    /// <remarks/>
    public void getDataAsync(string category, object userState) {
        if ((this.getDataOperationCompleted == null)) {
            this.getDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataOperationCompleted);
        }
        this.InvokeAsync("getData", new object[] {
                    category}, this.getDataOperationCompleted, userState);
    }
    
    private void OngetDataOperationCompleted(object arg) {
        if ((this.getDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getDataCompleted(this, new getDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#loginUser", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string loginUser(string email, string password) {
        object[] results = this.Invoke("loginUser", new object[] {
                    email,
                    password});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginloginUser(string email, string password, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("loginUser", new object[] {
                    email,
                    password}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndloginUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void loginUserAsync(string email, string password) {
        this.loginUserAsync(email, password, null);
    }
    
    /// <remarks/>
    public void loginUserAsync(string email, string password, object userState) {
        if ((this.loginUserOperationCompleted == null)) {
            this.loginUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginUserOperationCompleted);
        }
        this.InvokeAsync("loginUser", new object[] {
                    email,
                    password}, this.loginUserOperationCompleted, userState);
    }
    
    private void OnloginUserOperationCompleted(object arg) {
        if ((this.loginUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.loginUserCompleted(this, new loginUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#verifyUserLogin", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string verifyUserLogin(string email, string user_password) {
        object[] results = this.Invoke("verifyUserLogin", new object[] {
                    email,
                    user_password});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginverifyUserLogin(string email, string user_password, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("verifyUserLogin", new object[] {
                    email,
                    user_password}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndverifyUserLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void verifyUserLoginAsync(string email, string user_password) {
        this.verifyUserLoginAsync(email, user_password, null);
    }
    
    /// <remarks/>
    public void verifyUserLoginAsync(string email, string user_password, object userState) {
        if ((this.verifyUserLoginOperationCompleted == null)) {
            this.verifyUserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyUserLoginOperationCompleted);
        }
        this.InvokeAsync("verifyUserLogin", new object[] {
                    email,
                    user_password}, this.verifyUserLoginOperationCompleted, userState);
    }
    
    private void OnverifyUserLoginOperationCompleted(object arg) {
        if ((this.verifyUserLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.verifyUserLoginCompleted(this, new verifyUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#addNewUser", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string addNewUser(string firstname, string lastname, string email, string user_password) {
        object[] results = this.Invoke("addNewUser", new object[] {
                    firstname,
                    lastname,
                    email,
                    user_password});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddNewUser(string firstname, string lastname, string email, string user_password, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addNewUser", new object[] {
                    firstname,
                    lastname,
                    email,
                    user_password}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddNewUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void addNewUserAsync(string firstname, string lastname, string email, string user_password) {
        this.addNewUserAsync(firstname, lastname, email, user_password, null);
    }
    
    /// <remarks/>
    public void addNewUserAsync(string firstname, string lastname, string email, string user_password, object userState) {
        if ((this.addNewUserOperationCompleted == null)) {
            this.addNewUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewUserOperationCompleted);
        }
        this.InvokeAsync("addNewUser", new object[] {
                    firstname,
                    lastname,
                    email,
                    user_password}, this.addNewUserOperationCompleted, userState);
    }
    
    private void OnaddNewUserOperationCompleted(object arg) {
        if ((this.addNewUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addNewUserCompleted(this, new addNewUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#editUser", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string editUser(string user_id, string title, string first_name, string last_name, string job_desc, string email, string contact) {
        object[] results = this.Invoke("editUser", new object[] {
                    user_id,
                    title,
                    first_name,
                    last_name,
                    job_desc,
                    email,
                    contact});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegineditUser(string user_id, string title, string first_name, string last_name, string job_desc, string email, string contact, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("editUser", new object[] {
                    user_id,
                    title,
                    first_name,
                    last_name,
                    job_desc,
                    email,
                    contact}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndeditUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void editUserAsync(string user_id, string title, string first_name, string last_name, string job_desc, string email, string contact) {
        this.editUserAsync(user_id, title, first_name, last_name, job_desc, email, contact, null);
    }
    
    /// <remarks/>
    public void editUserAsync(string user_id, string title, string first_name, string last_name, string job_desc, string email, string contact, object userState) {
        if ((this.editUserOperationCompleted == null)) {
            this.editUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditUserOperationCompleted);
        }
        this.InvokeAsync("editUser", new object[] {
                    user_id,
                    title,
                    first_name,
                    last_name,
                    job_desc,
                    email,
                    contact}, this.editUserOperationCompleted, userState);
    }
    
    private void OneditUserOperationCompleted(object arg) {
        if ((this.editUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.editUserCompleted(this, new editUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#userAddNewTeam", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string userAddNewTeam(string email, string team_name) {
        object[] results = this.Invoke("userAddNewTeam", new object[] {
                    email,
                    team_name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginuserAddNewTeam(string email, string team_name, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("userAddNewTeam", new object[] {
                    email,
                    team_name}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnduserAddNewTeam(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void userAddNewTeamAsync(string email, string team_name) {
        this.userAddNewTeamAsync(email, team_name, null);
    }
    
    /// <remarks/>
    public void userAddNewTeamAsync(string email, string team_name, object userState) {
        if ((this.userAddNewTeamOperationCompleted == null)) {
            this.userAddNewTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserAddNewTeamOperationCompleted);
        }
        this.InvokeAsync("userAddNewTeam", new object[] {
                    email,
                    team_name}, this.userAddNewTeamOperationCompleted, userState);
    }
    
    private void OnuserAddNewTeamOperationCompleted(object arg) {
        if ((this.userAddNewTeamCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.userAddNewTeamCompleted(this, new userAddNewTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#addUserToTeam", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string addUserToTeam(string email, string team_name) {
        object[] results = this.Invoke("addUserToTeam", new object[] {
                    email,
                    team_name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddUserToTeam(string email, string team_name, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addUserToTeam", new object[] {
                    email,
                    team_name}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddUserToTeam(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void addUserToTeamAsync(string email, string team_name) {
        this.addUserToTeamAsync(email, team_name, null);
    }
    
    /// <remarks/>
    public void addUserToTeamAsync(string email, string team_name, object userState) {
        if ((this.addUserToTeamOperationCompleted == null)) {
            this.addUserToTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserToTeamOperationCompleted);
        }
        this.InvokeAsync("addUserToTeam", new object[] {
                    email,
                    team_name}, this.addUserToTeamOperationCompleted, userState);
    }
    
    private void OnaddUserToTeamOperationCompleted(object arg) {
        if ((this.addUserToTeamCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addUserToTeamCompleted(this, new addUserToTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getUser", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getUser(string email) {
        object[] results = this.Invoke("getUser", new object[] {
                    email});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetUser(string email, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getUser", new object[] {
                    email}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getUserAsync(string email) {
        this.getUserAsync(email, null);
    }
    
    /// <remarks/>
    public void getUserAsync(string email, object userState) {
        if ((this.getUserOperationCompleted == null)) {
            this.getUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserOperationCompleted);
        }
        this.InvokeAsync("getUser", new object[] {
                    email}, this.getUserOperationCompleted, userState);
    }
    
    private void OngetUserOperationCompleted(object arg) {
        if ((this.getUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getUserCompleted(this, new getUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getTeamProjects", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getTeamProjects(string team_name) {
        object[] results = this.Invoke("getTeamProjects", new object[] {
                    team_name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTeamProjects(string team_name, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTeamProjects", new object[] {
                    team_name}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetTeamProjects(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getTeamProjectsAsync(string team_name) {
        this.getTeamProjectsAsync(team_name, null);
    }
    
    /// <remarks/>
    public void getTeamProjectsAsync(string team_name, object userState) {
        if ((this.getTeamProjectsOperationCompleted == null)) {
            this.getTeamProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamProjectsOperationCompleted);
        }
        this.InvokeAsync("getTeamProjects", new object[] {
                    team_name}, this.getTeamProjectsOperationCompleted, userState);
    }
    
    private void OngetTeamProjectsOperationCompleted(object arg) {
        if ((this.getTeamProjectsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTeamProjectsCompleted(this, new getTeamProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getProjectTasks", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getProjectTasks(string proj_name) {
        object[] results = this.Invoke("getProjectTasks", new object[] {
                    proj_name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetProjectTasks(string proj_name, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getProjectTasks", new object[] {
                    proj_name}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetProjectTasks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getProjectTasksAsync(string proj_name) {
        this.getProjectTasksAsync(proj_name, null);
    }
    
    /// <remarks/>
    public void getProjectTasksAsync(string proj_name, object userState) {
        if ((this.getProjectTasksOperationCompleted == null)) {
            this.getProjectTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectTasksOperationCompleted);
        }
        this.InvokeAsync("getProjectTasks", new object[] {
                    proj_name}, this.getProjectTasksOperationCompleted, userState);
    }
    
    private void OngetProjectTasksOperationCompleted(object arg) {
        if ((this.getProjectTasksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getProjectTasksCompleted(this, new getProjectTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getListOfTeams", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getListOfTeams() {
        object[] results = this.Invoke("getListOfTeams", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetListOfTeams(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getListOfTeams", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetListOfTeams(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getListOfTeamsAsync() {
        this.getListOfTeamsAsync(null);
    }
    
    /// <remarks/>
    public void getListOfTeamsAsync(object userState) {
        if ((this.getListOfTeamsOperationCompleted == null)) {
            this.getListOfTeamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListOfTeamsOperationCompleted);
        }
        this.InvokeAsync("getListOfTeams", new object[0], this.getListOfTeamsOperationCompleted, userState);
    }
    
    private void OngetListOfTeamsOperationCompleted(object arg) {
        if ((this.getListOfTeamsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getListOfTeamsCompleted(this, new getListOfTeamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getTeam", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getTeam(string team_id) {
        object[] results = this.Invoke("getTeam", new object[] {
                    team_id});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTeam(string team_id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTeam", new object[] {
                    team_id}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetTeam(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getTeamAsync(string team_id) {
        this.getTeamAsync(team_id, null);
    }
    
    /// <remarks/>
    public void getTeamAsync(string team_id, object userState) {
        if ((this.getTeamOperationCompleted == null)) {
            this.getTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamOperationCompleted);
        }
        this.InvokeAsync("getTeam", new object[] {
                    team_id}, this.getTeamOperationCompleted, userState);
    }
    
    private void OngetTeamOperationCompleted(object arg) {
        if ((this.getTeamCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTeamCompleted(this, new getTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#getTeamMembers", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string getTeamMembers(string team_id) {
        object[] results = this.Invoke("getTeamMembers", new object[] {
                    team_id});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTeamMembers(string team_id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTeamMembers", new object[] {
                    team_id}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetTeamMembers(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getTeamMembersAsync(string team_id) {
        this.getTeamMembersAsync(team_id, null);
    }
    
    /// <remarks/>
    public void getTeamMembersAsync(string team_id, object userState) {
        if ((this.getTeamMembersOperationCompleted == null)) {
            this.getTeamMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamMembersOperationCompleted);
        }
        this.InvokeAsync("getTeamMembers", new object[] {
                    team_id}, this.getTeamMembersOperationCompleted, userState);
    }
    
    private void OngetTeamMembersOperationCompleted(object arg) {
        if ((this.getTeamMembersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTeamMembersCompleted(this, new getTeamMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#addTask", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string addTask(string projid, string taskdesc, string timereq, string taskcreated, string taskdue) {
        object[] results = this.Invoke("addTask", new object[] {
                    projid,
                    taskdesc,
                    timereq,
                    taskcreated,
                    taskdue});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddTask(string projid, string taskdesc, string timereq, string taskcreated, string taskdue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addTask", new object[] {
                    projid,
                    taskdesc,
                    timereq,
                    taskcreated,
                    taskdue}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddTask(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void addTaskAsync(string projid, string taskdesc, string timereq, string taskcreated, string taskdue) {
        this.addTaskAsync(projid, taskdesc, timereq, taskcreated, taskdue, null);
    }
    
    /// <remarks/>
    public void addTaskAsync(string projid, string taskdesc, string timereq, string taskcreated, string taskdue, object userState) {
        if ((this.addTaskOperationCompleted == null)) {
            this.addTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTaskOperationCompleted);
        }
        this.InvokeAsync("addTask", new object[] {
                    projid,
                    taskdesc,
                    timereq,
                    taskcreated,
                    taskdue}, this.addTaskOperationCompleted, userState);
    }
    
    private void OnaddTaskOperationCompleted(object arg) {
        if ((this.addTaskCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addTaskCompleted(this, new addTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#addNewProject", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string addNewProject(string proj_manager_ID, string team_id, string proj_desc, string proj_name) {
        object[] results = this.Invoke("addNewProject", new object[] {
                    proj_manager_ID,
                    team_id,
                    proj_desc,
                    proj_name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddNewProject(string proj_manager_ID, string team_id, string proj_desc, string proj_name, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addNewProject", new object[] {
                    proj_manager_ID,
                    team_id,
                    proj_desc,
                    proj_name}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndaddNewProject(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void addNewProjectAsync(string proj_manager_ID, string team_id, string proj_desc, string proj_name) {
        this.addNewProjectAsync(proj_manager_ID, team_id, proj_desc, proj_name, null);
    }
    
    /// <remarks/>
    public void addNewProjectAsync(string proj_manager_ID, string team_id, string proj_desc, string proj_name, object userState) {
        if ((this.addNewProjectOperationCompleted == null)) {
            this.addNewProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewProjectOperationCompleted);
        }
        this.InvokeAsync("addNewProject", new object[] {
                    proj_manager_ID,
                    team_id,
                    proj_desc,
                    proj_name}, this.addNewProjectOperationCompleted, userState);
    }
    
    private void OnaddNewProjectOperationCompleted(object arg) {
        if ((this.addNewProjectCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addNewProjectCompleted(this, new addNewProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#deleteTask", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string deleteTask(string taskid) {
        object[] results = this.Invoke("deleteTask", new object[] {
                    taskid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindeleteTask(string taskid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("deleteTask", new object[] {
                    taskid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddeleteTask(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void deleteTaskAsync(string taskid) {
        this.deleteTaskAsync(taskid, null);
    }
    
    /// <remarks/>
    public void deleteTaskAsync(string taskid, object userState) {
        if ((this.deleteTaskOperationCompleted == null)) {
            this.deleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTaskOperationCompleted);
        }
        this.InvokeAsync("deleteTask", new object[] {
                    taskid}, this.deleteTaskOperationCompleted, userState);
    }
    
    private void OndeleteTaskOperationCompleted(object arg) {
        if ((this.deleteTaskCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteTaskCompleted(this, new deleteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:pmmeWS#joinTeam", RequestNamespace="urn:pmmeWS", ResponseNamespace="urn:pmmeWS")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string joinTeam(string userid, string teamid) {
        object[] results = this.Invoke("joinTeam", new object[] {
                    userid,
                    teamid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginjoinTeam(string userid, string teamid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("joinTeam", new object[] {
                    userid,
                    teamid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndjoinTeam(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void joinTeamAsync(string userid, string teamid) {
        this.joinTeamAsync(userid, teamid, null);
    }
    
    /// <remarks/>
    public void joinTeamAsync(string userid, string teamid, object userState) {
        if ((this.joinTeamOperationCompleted == null)) {
            this.joinTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnjoinTeamOperationCompleted);
        }
        this.InvokeAsync("joinTeam", new object[] {
                    userid,
                    teamid}, this.joinTeamOperationCompleted, userState);
    }
    
    private void OnjoinTeamOperationCompleted(object arg) {
        if ((this.joinTeamCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.joinTeamCompleted(this, new joinTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getAllUsersCompletedEventHandler(object sender, getAllUsersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getAllTeamsCompletedEventHandler(object sender, getAllTeamsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAllTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAllTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getAllProjectsCompletedEventHandler(object sender, getAllProjectsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAllProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAllProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getAllTasksCompletedEventHandler(object sender, getAllTasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAllTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAllTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getDataCompletedEventHandler(object sender, getDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void loginUserCompletedEventHandler(object sender, loginUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class loginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal loginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void verifyUserLoginCompletedEventHandler(object sender, verifyUserLoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class verifyUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal verifyUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void addNewUserCompletedEventHandler(object sender, addNewUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class addNewUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal addNewUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void editUserCompletedEventHandler(object sender, editUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class editUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal editUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void userAddNewTeamCompletedEventHandler(object sender, userAddNewTeamCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class userAddNewTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal userAddNewTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void addUserToTeamCompletedEventHandler(object sender, addUserToTeamCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class addUserToTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal addUserToTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getUserCompletedEventHandler(object sender, getUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getTeamProjectsCompletedEventHandler(object sender, getTeamProjectsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTeamProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTeamProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getProjectTasksCompletedEventHandler(object sender, getProjectTasksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getProjectTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getProjectTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getListOfTeamsCompletedEventHandler(object sender, getListOfTeamsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getListOfTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getListOfTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getTeamCompletedEventHandler(object sender, getTeamCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void getTeamMembersCompletedEventHandler(object sender, getTeamMembersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTeamMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTeamMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void addTaskCompletedEventHandler(object sender, addTaskCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class addTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal addTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void addNewProjectCompletedEventHandler(object sender, addNewProjectCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class addNewProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal addNewProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void deleteTaskCompletedEventHandler(object sender, deleteTaskCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class deleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal deleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void joinTeamCompletedEventHandler(object sender, joinTeamCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class joinTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal joinTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
